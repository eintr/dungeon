/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: protocol_def.proto */

#ifndef PROTOBUF_C_protocol_5fdef_2eproto__INCLUDED
#define PROTOBUF_C_protocol_5fdef_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1000000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _MsgEst MsgEst;
typedef struct _MsgNotify MsgNotify;
typedef struct _API API;


/* --- enums --- */

typedef enum _NotifyType {
  NOTIFY_TYPE__Message = 0,
  NOTIFY_TYPE__Session = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(NOTIFY_TYPE)
} NotifyType;

/* --- messages --- */

struct  _MsgEst
{
  ProtobufCMessage base;
  char *session_id;
};
#define MSG_EST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg_est__descriptor) \
    , NULL }


struct  _MsgNotify
{
  ProtobufCMessage base;
  NotifyType type;
};
#define MSG_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg_notify__descriptor) \
    , 0 }


struct  _API
{
  ProtobufCMessage base;
  NotifyType type;
};
#define API__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&api__descriptor) \
    , 0 }


/* MsgEst methods */
void   msg_est__init
                     (MsgEst         *message);
size_t msg_est__get_packed_size
                     (const MsgEst   *message);
size_t msg_est__pack
                     (const MsgEst   *message,
                      uint8_t             *out);
size_t msg_est__pack_to_buffer
                     (const MsgEst   *message,
                      ProtobufCBuffer     *buffer);
MsgEst *
       msg_est__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg_est__free_unpacked
                     (MsgEst *message,
                      ProtobufCAllocator *allocator);
/* MsgNotify methods */
void   msg_notify__init
                     (MsgNotify         *message);
size_t msg_notify__get_packed_size
                     (const MsgNotify   *message);
size_t msg_notify__pack
                     (const MsgNotify   *message,
                      uint8_t             *out);
size_t msg_notify__pack_to_buffer
                     (const MsgNotify   *message,
                      ProtobufCBuffer     *buffer);
MsgNotify *
       msg_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg_notify__free_unpacked
                     (MsgNotify *message,
                      ProtobufCAllocator *allocator);
/* API methods */
void   api__init
                     (API         *message);
size_t api__get_packed_size
                     (const API   *message);
size_t api__pack
                     (const API   *message,
                      uint8_t             *out);
size_t api__pack_to_buffer
                     (const API   *message,
                      ProtobufCBuffer     *buffer);
API *
       api__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   api__free_unpacked
                     (API *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MsgEst_Closure)
                 (const MsgEst *message,
                  void *closure_data);
typedef void (*MsgNotify_Closure)
                 (const MsgNotify *message,
                  void *closure_data);
typedef void (*API_Closure)
                 (const API *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    notify_type__descriptor;
extern const ProtobufCMessageDescriptor msg_est__descriptor;
extern const ProtobufCMessageDescriptor msg_notify__descriptor;
extern const ProtobufCMessageDescriptor api__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_protocol_5fdef_2eproto__INCLUDED */
